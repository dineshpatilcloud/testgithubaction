name: Terraform Cleanup on Deletion

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

env:
  TF_BUCKET: your-terraform-state-bucket-name

jobs:
  detect-deleted-projects:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Important for comparing commits

      - name: Detect deleted folders
        id: detect
        run: |
          parent_folder="producers"
          echo "Fetching deleted folders..."

          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "Comparing for PR with origin/main..."
            deleted_folders=$(git diff --name-only --diff-filter=D origin/main | grep '/' | awk -F'/' '{print $2}' | sort -u | uniq)
          else 
            echo "Comparing for merge with origin/main..."
            deleted_folders=$(git diff --name-only --diff-filter=D HEAD^ HEAD | grep '/' | awk -F'/' '{print $2}' | sort -u | uniq)
          fi

          if [[ -z "$deleted_folders" ]]; then
            echo "No deleted folders found"
            echo "deleted_folders=" >> $GITHUB_ENV
          else
            echo "Deleted folders or files from folders before filtering are as below:"
            printf "%s\n" "${deleted_folders[@]}"
            
            valid_folders=()
            for folder in $deleted_folders; do
              if [ -d "$parent_folder/$folder" ]; then
                if find "$parent_folder/$folder" -type f | grep -q .; then
                  echo "Folder $folder still has files. Skipping deletion."
                  continue
                else
                  echo "Folder $folder is empty"
                fi
              else
                echo "Folder $folder is deleted and state file can be safely deleted"
                valid_folders+=("$folder")
              fi
            done 

            formatted_folders=$(printf '%s\n' "${valid_folders[@]}" | jq -R -s -c 'split("\n") | map(select(. != ""))')
            echo "Deleted folders after filtering are as below:"
            echo "$formatted_folders"
            echo "CLEAN_FOLDERS=$formatted_folders" >> $GITHUB_ENV
          fi

  show-on-pr:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: detect-deleted-projects

    steps:
      - name: Show deleted folders (PR Preview)
        run: |
          echo "⚠️ The following folders will be removed and their Terraform state will be destroyed:"
          for folder in $CLEAN_FOLDERS; do
            echo "- $folder"
          done

  destroy-on-merge:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: detect-deleted-projects

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Terraform destroy for deleted folders
        run: |
          for folder in $CLEAN_FOLDERS; do
            echo "Running Terraform destroy for $folder"

            cd "$folder" || continue

            cd -
          done

      - name: Delete state file from GCS
        run: |
          for folder in $CLEAN_FOLDERS; do
            echo "Deleting Terraform state for $parent_folder/$folder"
           # gcloud storage rm -r gs://${TF_BUCKET}/$folder || echo "Failed to delete state for $folder"
          done
