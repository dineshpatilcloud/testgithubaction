name: Terraform Cleanup on Deletion

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

env:
  TF_BUCKET: your-terraform-state-bucket-name

jobs:
  detect-deleted-projects:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Important for comparing commits

      - name: Detect deleted folders
        id: detect
        run: |
          parent_folder="producers"
          DELETED=$(git diff --name-only origin/main...HEAD | grep -oE '^[^/]+/' | sort -u)
          echo "Deleted folders: $DELETED"

          # Check if folders still have files
          CLEAN_FOLDERS=""
          for folder in $DELETED; do
            if [ -d "$parent_folder/$folder" ] && [ "$(ls -A $parent_folder/$folder 2>/dev/null)" ]; then
              echo "Folder $folder still contains files. Skipping."
            else
              CLEAN_FOLDERS+="$folder "
            fi
          done

          echo "CLEAN_FOLDERS=$CLEAN_FOLDERS" >> $GITHUB_ENV
          echo "Clean Folders: $CLEAN_FOLDERS"

  show-on-pr:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: detect-deleted-projects

    steps:
      - name: Show deleted folders (PR Preview)
        run: |
          echo "⚠️ The following folders will be removed and their Terraform state will be destroyed:"
          for folder in $CLEAN_FOLDERS; do
            echo "- $folder"
          done

  destroy-on-merge:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: detect-deleted-projects

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Terraform destroy for deleted folders
        run: |
          for folder in $CLEAN_FOLDERS; do
            echo "Running Terraform destroy for $folder"

            cd "$folder" || continue

            cd -
          done

      - name: Delete state file from GCS
        run: |
          for folder in $CLEAN_FOLDERS; do
            echo "Deleting Terraform state for $parent_folder/$folder"
           # gcloud storage rm -r gs://${TF_BUCKET}/$folder || echo "Failed to delete state for $folder"
          done
